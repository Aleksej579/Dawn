{% doc %}
  @prompt
    A section with two images, one on the left and one on the right.
    You can add an image or text with a title and description. If an image is added, we display it; if text is added, we display it; if nothing is added, we stretch the second image or the second block of text across the entire width.
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-two-column-section-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-two-column-container-{{ ai_gen_id }} {
    max-width: {{ block.settings.container_width }}px;
    margin: 0 auto;
    padding: 0 {{ block.settings.horizontal_padding }}px;
  }

  .ai-two-column-grid-{{ ai_gen_id }} {
    display: grid;
    gap: {{ block.settings.column_gap }}px;
    align-items: {{ block.settings.vertical_alignment }};
  }

  .ai-two-column-grid-{{ ai_gen_id }}.ai-layout-two-columns {
    grid-template-columns: 1fr 1fr;
  }

  .ai-two-column-grid-{{ ai_gen_id }}.ai-layout-single-column {
    grid-template-columns: 1fr;
  }

  .ai-two-column-item-{{ ai_gen_id }} {
    width: 100%;
  }

  .ai-two-column-image-{{ ai_gen_id }} {
    width: 100%;
    height: auto;
    border-radius: {{ block.settings.image_border_radius }}px;
    object-fit: cover;
  }

  .ai-two-column-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    aspect-ratio: {{ block.settings.image_aspect_ratio }};
    background-color: #f4f4f4;
    border-radius: {{ block.settings.image_border_radius }}px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-two-column-image-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 200px;
    max-height: 200px;
    opacity: 0.3;
  }

  .ai-two-column-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 8px 16px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 4px;
    font-size: 14px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  .ai-two-column-text-content-{{ ai_gen_id }} {
    padding: {{ block.settings.text_padding }}px;
    background-color: {{ block.settings.text_background_color }};
    border-radius: {{ block.settings.text_border_radius }}px;
    text-align: {{ block.settings.text_alignment }};
  }

  .ai-two-column-title-{{ ai_gen_id }} {
    margin: 0 0 {{ block.settings.title_margin_bottom }}px;
    font-size: {{ block.settings.title_font_size }}px;
    font-weight: {{ block.settings.title_font_weight }};
    color: {{ block.settings.title_color }};
    line-height: 1.2;
  }

  .ai-two-column-description-{{ ai_gen_id }} {
    margin: 0;
    font-size: {{ block.settings.description_font_size }}px;
    color: {{ block.settings.description_color }};
    line-height: 1.5;
  }

  .ai-two-column-text-placeholder-{{ ai_gen_id }} {
    padding: {{ block.settings.text_padding }}px;
    background-color: #f9f9f9;
    border: 2px dashed #ddd;
    border-radius: {{ block.settings.text_border_radius }}px;
    text-align: center;
    color: #666;
    font-style: italic;
  }

  @media screen and (max-width: 749px) {
    .ai-two-column-grid-{{ ai_gen_id }} {
      grid-template-columns: 1fr !important;
      gap: {{ block.settings.mobile_gap }}px;
    }

    .ai-two-column-container-{{ ai_gen_id }} {
      padding: 0 {{ block.settings.mobile_horizontal_padding }}px;
    }

    .ai-two-column-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.mobile_title_font_size }}px;
    }

    .ai-two-column-description-{{ ai_gen_id }} {
      font-size: {{ block.settings.mobile_description_font_size }}px;
    }
  }
{% endstyle %}

{% liquid
  assign left_has_image = false
  assign left_has_text = false
  assign right_has_image = false
  assign right_has_text = false

  if block.settings.left_image != blank
    assign left_has_image = true
  endif

  if block.settings.left_title != blank or block.settings.left_description != blank
    assign left_has_text = true
  endif

  if block.settings.right_image != blank
    assign right_has_image = true
  endif

  if block.settings.right_title != blank or block.settings.right_description != blank
    assign right_has_text = true
  endif

  assign left_has_content = false
  assign right_has_content = false

  if left_has_image or left_has_text
    assign left_has_content = true
  endif

  if right_has_image or right_has_text
    assign right_has_content = true
  endif

  assign layout_class = 'ai-layout-two-columns'
  if left_has_content == false or right_has_content == false
    assign layout_class = 'ai-layout-single-column'
  endif
%}

<div class="ai-two-column-section-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-two-column-container-{{ ai_gen_id }}">
    <div class="ai-two-column-grid-{{ ai_gen_id }} {{ layout_class }}">
      {% if left_has_content %}
        <div class="ai-two-column-item-{{ ai_gen_id }}">
          {% if left_has_image %}
            {% if block.settings.left_image %}
              <img
                src="{{ block.settings.left_image | image_url: width: 800 }}"
                alt="{{ block.settings.left_image.alt | escape }}"
                class="ai-two-column-image-{{ ai_gen_id }}"
                loading="lazy"
                width="{{ block.settings.left_image.width }}"
                height="{{ block.settings.left_image.height }}"
              >
            {% else %}
              <div class="ai-two-column-image-placeholder-{{ ai_gen_id }}">
                {{ 'image' | placeholder_svg_tag }}
                <div class="ai-two-column-empty-state-{{ ai_gen_id }}">Add left image</div>
              </div>
            {% endif %}
          {% elsif left_has_text %}
            <div class="ai-two-column-text-content-{{ ai_gen_id }}">
              {% if block.settings.left_title != blank %}
                <h2 class="ai-two-column-title-{{ ai_gen_id }}">{{ block.settings.left_title }}</h2>
              {% endif %}
              {% if block.settings.left_description != blank %}
                <div class="ai-two-column-description-{{ ai_gen_id }}">{{ block.settings.left_description }}</div>
              {% endif %}
            </div>
          {% else %}
            <div class="ai-two-column-text-placeholder-{{ ai_gen_id }}">Add content for the left column</div>
          {% endif %}
        </div>
      {% endif %}

      {% if right_has_content %}
        <div class="ai-two-column-item-{{ ai_gen_id }}">
          {% if right_has_image %}
            {% if block.settings.right_image %}
              <img
                src="{{ block.settings.right_image | image_url: width: 800 }}"
                alt="{{ block.settings.right_image.alt | escape }}"
                class="ai-two-column-image-{{ ai_gen_id }}"
                loading="lazy"
                width="{{ block.settings.right_image.width }}"
                height="{{ block.settings.right_image.height }}"
              >
            {% else %}
              <div class="ai-two-column-image-placeholder-{{ ai_gen_id }}">
                {{ 'image' | placeholder_svg_tag }}
                <div class="ai-two-column-empty-state-{{ ai_gen_id }}">Add right image</div>
              </div>
            {% endif %}
          {% elsif right_has_text %}
            <div class="ai-two-column-text-content-{{ ai_gen_id }}">
              {% if block.settings.right_title != blank %}
                <h2 class="ai-two-column-title-{{ ai_gen_id }}">{{ block.settings.right_title }}</h2>
              {% endif %}
              {% if block.settings.right_description != blank %}
                <div class="ai-two-column-description-{{ ai_gen_id }}">{{ block.settings.right_description }}</div>
              {% endif %}
            </div>
          {% else %}
            <div class="ai-two-column-text-placeholder-{{ ai_gen_id }}">Add content for the right column</div>
          {% endif %}
        </div>
      {% elsif left_has_content %}
        <div class="ai-two-column-item-{{ ai_gen_id }}">
          {% if left_has_image %}
            {% if block.settings.left_image %}
              <img
                src="{{ block.settings.left_image | image_url: width: 800 }}"
                alt="{{ block.settings.left_image.alt | escape }}"
                class="ai-two-column-image-{{ ai_gen_id }}"
                loading="lazy"
                width="{{ block.settings.left_image.width }}"
                height="{{ block.settings.left_image.height }}"
              >
            {% else %}
              <div class="ai-two-column-image-placeholder-{{ ai_gen_id }}">
                {{ 'image' | placeholder_svg_tag }}
                <div class="ai-two-column-empty-state-{{ ai_gen_id }}">Add left image</div>
              </div>
            {% endif %}
          {% elsif left_has_text %}
            <div class="ai-two-column-text-content-{{ ai_gen_id }}">
              {% if block.settings.left_title != blank %}
                <h2 class="ai-two-column-title-{{ ai_gen_id }}">{{ block.settings.left_title }}</h2>
              {% endif %}
              {% if block.settings.left_description != blank %}
                <div class="ai-two-column-description-{{ ai_gen_id }}">{{ block.settings.left_description }}</div>
              {% endif %}
            </div>
          {% endif %}
        </div>
      {% endif %}

      {% unless left_has_content or right_has_content %}
        <div class="ai-two-column-item-{{ ai_gen_id }}">
          <div class="ai-two-column-text-placeholder-{{ ai_gen_id }}">Add images or text content to get started</div>
        </div>
      {% endunless %}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Two column section",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "Left column"
    },
    {
      "type": "image_picker",
      "id": "left_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "left_title",
      "label": "Title"
    },
    {
      "type": "richtext",
      "id": "left_description",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Right column"
    },
    {
      "type": "image_picker",
      "id": "right_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "right_title",
      "label": "Title"
    },
    {
      "type": "richtext",
      "id": "right_description",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "vertical_alignment",
      "label": "Vertical alignment",
      "options": [
        {
          "value": "start",
          "label": "Top"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "end",
          "label": "Bottom"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "column_gap",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Column gap",
      "default": 40
    },
    {
      "type": "range",
      "id": "mobile_gap",
      "min": 0,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Mobile gap",
      "default": 24
    },
    {
      "type": "header",
      "content": "Container"
    },
    {
      "type": "range",
      "id": "container_width",
      "min": 800,
      "max": 1600,
      "step": 50,
      "unit": "px",
      "label": "Container width",
      "default": 1200
    },
    {
      "type": "range",
      "id": "horizontal_padding",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Horizontal padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "mobile_horizontal_padding",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Mobile horizontal padding",
      "default": 16
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Section padding top",
      "default": 60
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Section padding bottom",
      "default": 60
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_background_color",
      "label": "Text background color",
      "default": "transparent"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#121212"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 16,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Title font size",
      "default": 32
    },
    {
      "type": "range",
      "id": "mobile_title_font_size",
      "min": 14,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Mobile title font size",
      "default": 24
    },
    {
      "type": "select",
      "id": "title_font_weight",
      "label": "Title font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "range",
      "id": "description_font_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Description font size",
      "default": 16
    },
    {
      "type": "range",
      "id": "mobile_description_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Mobile description font size",
      "default": 14
    },
    {
      "type": "range",
      "id": "title_margin_bottom",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Title margin bottom",
      "default": 16
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "text_padding",
      "min": 0,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Text padding",
      "default": 0
    },
    {
      "type": "range",
      "id": "text_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Text border radius",
      "default": 0
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 0
    },
    {
      "type": "select",
      "id": "image_aspect_ratio",
      "label": "Image aspect ratio",
      "options": [
        {
          "value": "1/1",
          "label": "Square (1:1)"
        },
        {
          "value": "4/3",
          "label": "Landscape (4:3)"
        },
        {
          "value": "3/2",
          "label": "Landscape (3:2)"
        },
        {
          "value": "16/9",
          "label": "Widescreen (16:9)"
        },
        {
          "value": "3/4",
          "label": "Portrait (3:4)"
        },
        {
          "value": "2/3",
          "label": "Portrait (2:3)"
        }
      ],
      "default": "4/3"
    }
  ],
  "presets": [
    {
      "name": "Two column section"
    }
  ]
}
{% endschema %}
